@page
@using Lucrare_de_licenta.Models
@using System.Diagnostics
@using Adventour.Data;
@model IndexModel
@{
    ViewData["Title"] = "Pagina Principala";
}
<head>
    <link rel="stylesheet" href="~/css/index.css" />
</head>

<div class="container-fluid mt-5">
    <form id="search-container" method="get" action="/Search">
        <div class="form-row d-flex align-items-stretch">
            <div class="form-floating flex-fill me-2">
                <input id="input-id-destinatie" type="hidden" name="idDestinatie"/>
                <input id="input-destinatie" class="form-control dropdown-toggle" name="destination"
                       placeholder="Destinatie" data-bs-toggle="dropdown" data-bs-auto-close="outside"
                       autocomplete="off" />
                    <i class="fas fa-times"></i>
                <button type="button" style="display:none"
                    class="btn-close position-absolute top-50 translate-middle-y end-0 me-2">
                </button>
                <label for="destination">Destiantie</label>
                <ul class="dropdown-menu position-absolute start-0 w-100 p-3 mt-2 overflow-auto
                            rounded bg-white shadow-lg dropdown-custom">
                    <li class="my-1">
                        <button class="dropdown-item"
                            type="button" data-target="destination" data-value="exemplu"
                                onclick="document.getElementById('input-destinatie').value='Atena'">
                            <div>
                                <div class="fw-medium">Atena</div>
                                <small class="text-muted">Europa, Grecia</small>
                            </div>            
                        </button>
                    </li>

                </ul>
            </div>
            <div class="form-floating flex-fill me-2">
                <input id="input-id-plecare" type="hidden" name="idPunctPlecare" value="" />
                <input class="form-control" name="plecare" placeholder="Plecare"
                       data-bs-toggle="dropdown" data-bs-auto-close="outside"
                       autocomplete="off" id="input-plecare" value=""/>
                <button type="button" style="display:none"
                        class="btn-close position-absolute top-50 translate-middle-y end-0 me-2">
                </button>
                <label for="plecare">Plecare Din</label>
                <ul class="dropdown-menu position-absolute start-0 w-100 p-3 mt-2 overflow-auto
                            rounded bg-white shadow-lg dropdown-custom"
                            id="dropdown-plecare">
                    @if(Model.Puncte_Plecare.Count>0)
                    @foreach (Punct_Plecare p in Model.Puncte_Plecare) {
                        <li class="my-1">
                            <button class="dropdown-item"
                                type="button" data-target="destination" data-value="exemplu"
                                    onclick="setPunct('@p.localitate','@p.cod_punct'); return false">
                                <div>
                                    <div class="fw-medium">@p.localitate</div>
                                    @if(string.IsNullOrWhiteSpace(p.judet))
                                    {
                                        <small class="text-muted">@p.judet</small>
                                    }                            
                                </div>
                            </button>
                        </li>
                        }
                    else
                    {
                        <div>Nu au fost gasite puncte de plecare</div>
                    }
                </ul>
            </div>
                <div class="form-floating flex-fill me-2">
                    <select class="form-select" name="month">
                        <option value="">Oricand</option>
                        @{
                            var now = DateTime.Now;
                            for (int i = 0; i <= 12; i++) {
                                var month = now.AddMonths(i);
                                var val = month.ToString("MM-yyyy");
                                var txt = month.ToString("MMMM yyyy",
                                System.Globalization.CultureInfo.CurrentCulture);
                                <option value="@val">@txt</option>
                            }
                        }
                    </select>
                    <label for="month">Luna</label>
            </div>
            <div class="form-floating flex-fill me-2">
                <input type="number"
                        class="form-control"
                        name="persoane"
                        value="1"
                        min="1"
                        max="10">
                <label for="persoane">Pers.</label>
            </div>
            <div class="form-floating d-flex align-items-center align-items-md-stretch" 
            style="padding:5px 0">
                <button class="c-button" type="submit">Caută</button>
            </div>
        </div>
    </form>
</div>

@* RECOMANDARILE SITE-ULUI *@
<div id="container-destinatii"
     class="row row-cols-2 row-cols-md-4 justify-content-center
         my-5 mx-0">
    @{
        foreach(Tara tara in Model.Tari)
        {
            <div class="col my-2 d-flex justify-content-center">
                <a class="card-destinatie " asp-page="/Search" 
                asp-route-country="@tara.cod_tara">
                    <img class="cd-img" 
                    src="@Model.Imagepath@(tara.img_tara ?? "\\error.png")"
                         onerror="if(this.src!='@Model.Imagepath\\error.png')
                    this.src='@Model.Imagepath\\error.png'" />
                    <div class="cd-title">
                        @tara.den_tara
                    </div>
                    <div class="cd-cta">
                        Caută acum
                    </div>
                </a>
            </div>
        }
    }
</div>
<div id="container-continente"
     class="row row-cols-2 row-cols-sm-3 row-cols-md-5 justify-content-center
        my-2 py-3 px-5">
    @{
        foreach(KeyValuePair<byte,string> continent in Model.Continente)
        {
            int cod = continent.Key;
            string nume = continent.Value;

            <a class="card-continent my-2 d-flex justify-content-center" 
            asp-page="/Search" asp-route-continent="@cod">
                <div class="cc-img mb-2"
                     style="mask-image: url('@Model.Imagepath/Continente/@(cod).svg');
                    -webkit-mask-image: url('@Model.Imagepath/Continente/@(cod).svg')">
                </div>
                <div class="cc-title">
                    @nume
                </div>
            </a>
        }
    }
</div>
<div id="container-tururi">

</div>

@section Scripts{
    <script>
        function setPunct(name, id) {
            document.getElementById('input-plecare').value = name;
            document.getElementById('input-id-plecare').value = id;
        }
        function setDropdown(inputId, dropdownId) {
            const input = document.getElementById(inputId);
            const dropdown = document.getElementById(dropdownId);

        // Afisarea meniului dropdown cand este in focus
        input.addEventListener('focus', function() {
            dropdown.classList.add('show');
        });

        // Ascunderea meniului dropdown
        document.addEventListener('click', function(event) {
            if (!input.contains(event.target) && !dropdown.contains(event.target)) {
                dropdown.classList.remove('show');
            }
        });

        // Previne ascunderea meniului cand utilizatorul apasa inauntrul lui
        dropdown.addEventListener('mousedown', function(event) {
            event.preventDefault();
        });
        }
                // Initialize both dropdowns
        setupDropdown('input-plecare', 'plecare-dropdown');
        setupDropdown('input-destinatie', 'destinatie-dropdown');
    </script>
}